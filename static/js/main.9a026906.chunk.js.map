{"version":3,"sources":["components/Card/Card.js","utils/array.js","images/cards/card-image-01.png","utils/cards-images.js","images/cards/card-image-02.png","images/cards/card-image-03.png","images/cards/card-image-04.png","images/cards/card-image-05.png","images/cards/card-image-06.png","images/cards/card-image-07.png","images/cards/card-image-08.png","images/cards/card-image-09.png","images/cards/card-image-10.png","images/cards/card-image-11.png","images/cards/card-image-12.png","images/cards/card-image-13.png","images/cards/card-image-14.png","images/cards/card-image-15.png","images/cards/card-image-16.png","images/cards/card-image-17.png","images/cards/card-image-18.png","utils/const.js","components/Board/Board.js","components/Button/Button.js","components/StopWatch.js","components/Controls/Controls.js","components/Forms/FormInput.js","components/Forms/FormResults.js","components/MainScreen/MainScreen.js","pages/App.js","index.js"],"names":["Card","card","onClick","isVisible","className","isOpen","src","link","alt","text","shuffle","initArray","array","slice","i","length","j","Math","floor","random","createShuffledArray","arraySize","push","concat","cardsImages","LOCAL_STORAGE_KEY","Board","props","useState","cardsList","setCardsList","twoCardsFlag","setTwoCardsFlag","score","setScore","openState","setOpenState","openStateRef","useRef","current","useEffect","cardsArray","BOARD_SIZE","map","item","index","id","number","onWin","setTimeout","cards","filter","newList","newScore","timeOutMs","Promise","resolve","reject","next","then","catch","cardId","hideCard","handleClick","isGameOn","oneCard","getCardsList","Button","userClass","buttonType","children","rest","type","StopWatch","count","addZero","value","seconds","fullMinutes","minutes","displayTime","timeCounter","Controls","disabled","onStartGame","title","onStopGame","onResultsClick","FormInput","name","setName","onSubmit","e","preventDefault","onSubmitName","result","placeholder","required","onChange","target","ResultsItem","time","FormResults","resultsTable","setResultsTable","localStorage","getItem","results","JSON","parse","onSubmitResults","sort","a","b","MainScreen","gameStatus","setGameStatus","winStatus","setWinStatus","setTimeCounter","savedTime","setSavedTime","areResultsVisible","setAreResultsVisible","isFormVisible","setIsFormVisible","gameStatusRef","winStatusRef","timeInterval","startTime","Date","now","expected","secondsCount","dt","max","setItem","stringify","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a026906.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card({ card, onClick }) {\r\n\r\n  const handleClick = () => {\r\n    onClick(card);\r\n  };\r\n\r\n  if (card.isVisible) {\r\n    return (\r\n      <article className=\"card\" onClick={handleClick}>\r\n        <div className={`card__container${card.isOpen ? ' card_open' : ''}`}>\r\n          <div className=\"card__front\"/>\r\n          <img className=\"card__back\" src={card.link} alt={card.text}/>\r\n        </div>\r\n      </article>\r\n    );\r\n  } else {\r\n    return (\r\n      <article className=\"card\">\r\n        <div className=\"card__empty\" />\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","\r\nfunction shuffle(initArray) {\r\n  const array = initArray.slice();\r\n\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport function createShuffledArray(arraySize = 18) {\r\n  const initArray = [];\r\n  for (let i = 1; i <= arraySize; i++) initArray.push(i);\r\n  const array = shuffle(initArray);\r\n\r\n  return shuffle(array.concat(shuffle(array.slice())));\r\n}\r\n","export default __webpack_public_path__ + \"static/media/card-image-01.45ef628e.png\";","import link01 from '../images/cards/card-image-01.png';\r\nimport link02 from '../images/cards/card-image-02.png';\r\nimport link03 from '../images/cards/card-image-03.png';\r\nimport link04 from '../images/cards/card-image-04.png';\r\nimport link05 from '../images/cards/card-image-05.png';\r\nimport link06 from '../images/cards/card-image-06.png';\r\nimport link07 from '../images/cards/card-image-07.png';\r\nimport link08 from '../images/cards/card-image-08.png';\r\nimport link09 from '../images/cards/card-image-09.png';\r\nimport link10 from '../images/cards/card-image-10.png';\r\nimport link11 from '../images/cards/card-image-11.png';\r\nimport link12 from '../images/cards/card-image-12.png';\r\nimport link13 from '../images/cards/card-image-13.png';\r\nimport link14 from '../images/cards/card-image-14.png';\r\nimport link15 from '../images/cards/card-image-15.png';\r\nimport link16 from '../images/cards/card-image-16.png';\r\nimport link17 from '../images/cards/card-image-17.png';\r\nimport link18 from '../images/cards/card-image-18.png';\r\n\r\nexport const cardsImages = [\r\n  { link: link01, text: 'Green Apple' },\r\n  { link: link02, text: 'A Raspberry' },\r\n  { link: link03, text: 'Two Cherries' },\r\n  { link: link04, text: 'A Strawberry' },\r\n  { link: link05, text: 'A Watermelon' },\r\n  { link: link06, text: 'An Apricot' },\r\n  { link: link07, text: 'Kiwi' },\r\n  { link: link08, text: 'Pomegranate' },\r\n  { link: link09, text: 'Green Grapes' },\r\n  { link: link10, text: 'Bananas' },\r\n  { link: link11, text: 'Red Apple' },\r\n  { link: link12, text: 'Oranges' },\r\n  { link: link13, text: 'Two plums' },\r\n  { link: link14, text: 'Two blueberries' },\r\n  { link: link15, text: 'Mango' },\r\n  { link: link16, text: 'Raspberries' },\r\n  { link: link17, text: 'Two Blackberries' },\r\n  { link: link18, text: 'Red Grapes' },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/card-image-02.35a258e2.png\";","export default __webpack_public_path__ + \"static/media/card-image-03.9c5f23f5.png\";","export default __webpack_public_path__ + \"static/media/card-image-04.4a4fbc39.png\";","export default __webpack_public_path__ + \"static/media/card-image-05.54957fb2.png\";","export default __webpack_public_path__ + \"static/media/card-image-06.a5a689d7.png\";","export default __webpack_public_path__ + \"static/media/card-image-07.5a656dad.png\";","export default __webpack_public_path__ + \"static/media/card-image-08.ccf7bd68.png\";","export default __webpack_public_path__ + \"static/media/card-image-09.c3f6772a.png\";","export default __webpack_public_path__ + \"static/media/card-image-10.ac650359.png\";","export default __webpack_public_path__ + \"static/media/card-image-11.e32afd60.png\";","export default __webpack_public_path__ + \"static/media/card-image-12.8ccb386f.png\";","export default __webpack_public_path__ + \"static/media/card-image-13.3f542bc6.png\";","export default __webpack_public_path__ + \"static/media/card-image-14.919afb5b.png\";","export default __webpack_public_path__ + \"static/media/card-image-15.7a42cdd4.png\";","export default __webpack_public_path__ + \"static/media/card-image-16.16178969.png\";","export default __webpack_public_path__ + \"static/media/card-image-17.f89ab31f.png\";","export default __webpack_public_path__ + \"static/media/card-image-18.a47de00f.png\";","\r\nexport const BOARD_SIZE = 36;\r\nexport const LOCAL_STORAGE_KEY = 'memory-game-results';\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '../Card/Card';\r\nimport { createShuffledArray } from '../../utils/array';\r\nimport { cardsImages } from '../../utils/cards-images';\r\nimport { BOARD_SIZE } from '../../utils/const';\r\nimport './Board.css';\r\n\r\nfunction Board(props) {\r\n  const [ cardsList, setCardsList ] = useState([]);\r\n  const [ twoCardsFlag, setTwoCardsFlag ] = useState(false);\r\n  const [ score, setScore ] = useState(0);\r\n  const [ openState, setOpenState ] = useState(0);\r\n  const openStateRef = useRef(openState);\r\n  openStateRef.current = openState;\r\n\r\n  useEffect(() => {\r\n    const numberArray = createShuffledArray(BOARD_SIZE / 2);\r\n    const cardsArray = numberArray.map((item, index) => {\r\n      const { link, text } = cardsImages[item - 1];\r\n      return ({\r\n        id: index, number: item, link, text, isVisible: true, isOpen: false,\r\n      });\r\n    });\r\n    setCardsList(cardsArray);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (score === BOARD_SIZE) {\r\n      props.onWin();\r\n      const numberArray = createShuffledArray(BOARD_SIZE / 2);\r\n      const cardsArray = numberArray.map((item, index) => {\r\n        const { link, text } = cardsImages[item - 1];\r\n        return ({\r\n          id: index, number: item, link, text, isVisible: true, isOpen: false,\r\n        });\r\n      });\r\n      setCardsList(cardsArray);\r\n      }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [score]);\r\n\r\n  useEffect(() => {\r\n    if (twoCardsFlag) {\r\n      setTimeout(() => {\r\n        const cards = cardsList.filter(item => item.isOpen);\r\n        let newList = [];\r\n\r\n        if (cards.length === 2 && cards[0].number === cards[1].number) {\r\n          newList = cardsList.map((item) => (\r\n            item.id === cards[0].id || item.id === cards[1].id\r\n            ? {...item, isOpen: false, isVisible : false}\r\n            : item\r\n          ));\r\n        } else {\r\n          newList = cardsList.map((item) => (\r\n            item.id === cards[0].id || item.id === cards[1].id\r\n            ? {...item, isOpen : false}\r\n            : item\r\n          ));\r\n        }\r\n        setCardsList(newList);\r\n        setTwoCardsFlag(false);\r\n      }, 1000);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [twoCardsFlag]);\r\n\r\n  useEffect(() => {\r\n    const cards = cardsList.filter(item => item.isOpen);\r\n    setOpenState(cards.length);\r\n    const newScore = cardsList.filter(item => !item.isVisible).length;\r\n    setScore(newScore)\r\n  }, [cardsList]);\r\n\r\n  useEffect(() => {\r\n    const waitForNextCard = (timeOutMs) => {\r\n      return new Promise((resolve, reject) => {\r\n        const next = () => {\r\n          if (openStateRef.current === 2) {\r\n            resolve();\r\n          } else if((timeOutMs -= 100) < 0) {\r\n            reject();\r\n          } else {\r\n            setTimeout(next, 100);\r\n          }\r\n        }\r\n        setTimeout(next, 100);\r\n      });\r\n    };\r\n\r\n    const hideCard = (cardId) => {\r\n      const newList = cardsList.map((item) => (\r\n        item.id === cardId ? {...item, isOpen : false} : item\r\n      ));\r\n      setCardsList(newList);\r\n    };\r\n\r\n    if (openStateRef.current === 1) {\r\n      waitForNextCard(3000)\r\n      .then(() => {\r\n        setTwoCardsFlag(true);\r\n      })\r\n      .catch(() => {  // Hide one card\r\n        const cards = cardsList.filter(item => item.isOpen);\r\n        hideCard(cards[0].id);\r\n      });\r\n    }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [openState]);\r\n\r\n\r\n  const handleClick = (card) => {\r\n    if (card.isVisible && !card.isOpen && openState < 2) {\r\n      const newList = cardsList.map((item) => (\r\n        item.id === card.id ? {...item, isOpen : true} : item\r\n      ));\r\n      setCardsList(newList);\r\n    }\r\n  };\r\n\r\n  const getCardsList = (cards) => {\r\n    if (cards.length > 0) {\r\n      return cards.map((oneCard) => (\r\n        <Card key={oneCard.id} card={oneCard} onClick={handleClick}/>\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={`board ${props.isGameOn ? 'board_enabled' : 'board_disabled'}`}>\r\n      <div className=\"board__cards-container\">\r\n        {getCardsList(cardsList)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({ userClass, buttonType, children, ...rest }) => (\r\n  <button\r\n    className={`button ${userClass || ''}`}\r\n    type={buttonType || 'button'}\r\n    {...rest}\r\n  >\r\n    { children || '' }\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nfunction StopWatch(props) {\r\n\r\n  const displayTime = (count) => {\r\n    const addZero = (value) => (value < 10 ? '0' : '') + value;\r\n    const seconds = count % 60;\r\n    const fullMinutes = (count - seconds) / 60;\r\n    const minutes = fullMinutes % 60;\r\n    const hours = (fullMinutes - minutes) / 60;\r\n\r\n    return `${\r\n      addZero(hours)}:${\r\n      addZero(minutes)}:${\r\n      addZero(seconds)}`;\r\n  };\r\n\r\n  return (\r\n    <span className={props.className}>\r\n      {displayTime(props.timeCounter)}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default StopWatch;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport StopWatch from '../StopWatch';\r\nimport './Controls.css';\r\n\r\nfunction Controls(props) {\r\n\r\n  const handleStartClick = () => {\r\n    props.onStartGame();\r\n  };\r\n\r\n  const handleStopClick = () => {\r\n    props.onStopGame();\r\n  };\r\n\r\n  const handleResultsClick = () => {\r\n    props.onResultsClick();\r\n  };\r\n\r\n  return(\r\n    <nav className=\"controls\">\r\n      <div className=\"controls__btn-container\">\r\n        <Button\r\n          userClass=\"controls__btn controls__btn_start\"\r\n          disabled={props.isGameOn}\r\n          onClick={handleStartClick}\r\n          title=\"Start game\"\r\n        />\r\n\r\n        <Button\r\n          userClass=\"controls__btn controls__btn_pause\"\r\n          disabled={!props.isGameOn}\r\n          onClick={handleStopClick}\r\n          title=\"Pause game\"\r\n        />\r\n\r\n        <Button\r\n          userClass=\"controls__btn controls__btn_results\"\r\n          disabled={props.isGameOn}\r\n          onClick={handleResultsClick}\r\n          title=\"View results table\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"controls__time-container\">\r\n        <StopWatch\r\n          className=\"controls__time\"\r\n          timeCounter={props.timeCounter}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Controls;","import React, { useState } from 'react';\r\nimport Button from '../Button/Button';\r\nimport './Form.css';\r\n\r\nfunction FormInput(props) {\r\n  const [ name, setName ] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmitName(name, props.result);\r\n  };\r\n\r\n  return (\r\n    <section className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <h3 className=\"form__header\">Enter your name</h3>\r\n\r\n        <div className=\"form__fields\">\r\n          <input\r\n            type=\"text\" id=\"input-name\" name=\"input-name\"\r\n            className=\"form__item form__item_name\"\r\n            placeholder=\"Name\" required\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\" id=\"input-time\" name=\"input-time\"\r\n            className=\"form__item form__item_time\"\r\n            disabled value={props.result}\r\n          />\r\n        </div>\r\n\r\n        <Button type=\"submit\" userClass=\"form__btn-submit\">\r\n          OK\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FormInput;","import React, { useState, useEffect } from 'react';\r\nimport Button from '../Button/Button';\r\nimport { LOCAL_STORAGE_KEY } from '../../utils/const';\r\nimport './Form.css';\r\n\r\nfunction ResultsItem({ name, time}) {\r\n  return (\r\n    <li className=\"form__list-item\">\r\n      <input\r\n        type=\"text\" id=\"input-name\" name=\"input-name\"\r\n        className=\"form__item form__item_name\"\r\n        disabled value={name || ''}\r\n      />\r\n      <input\r\n        type=\"text\" id=\"input-time\" name=\"input-time\"\r\n        className=\"form__item form__item_time\"\r\n        disabled value={time || ''}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction FormResults(props) {\r\n  const [ resultsTable, setResultsTable ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(LOCAL_STORAGE_KEY)) {\r\n      const results = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n      setResultsTable(results);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmitResults();\r\n  };\r\n\r\n  const getResults = (array) => {\r\n    if (array.length > 0) {\r\n      array.sort((a, b) => (a.time - b.time));\r\n      return (\r\n        <ul className=\"form__list\">\r\n          {\r\n            array.map((item, index) => (\r\n              <ResultsItem key={index} name={item.name} time={item.time}/>\r\n            ))\r\n          }\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <p className=\"form__empty\">\r\n          No results yet\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <h3 className=\"form__header\">Results</h3>\r\n        {\r\n          getResults(resultsTable)\r\n        }\r\n        <Button type=\"submit\" userClass=\"form__btn-submit\">\r\n          OK\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FormResults;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Board from '../Board/Board';\r\nimport Controls from '../Controls/Controls';\r\nimport FormInput from '../Forms/FormInput';\r\nimport FormResults from '../Forms/FormResults';\r\nimport { LOCAL_STORAGE_KEY } from '../../utils/const';\r\nimport './MainScreen.css';\r\n\r\nfunction MainScreen() {\r\n  const [ gameStatus, setGameStatus ] = useState(false);\r\n  const [ winStatus, setWinStatus ] = useState(false);\r\n  const [ timeCounter, setTimeCounter ] = useState(0);\r\n  const [ savedTime, setSavedTime ] = useState(0);\r\n  const [ areResultsVisible, setAreResultsVisible ] = useState(false);\r\n  const [ isFormVisible, setIsFormVisible ] = useState(false);\r\n\r\n  const gameStatusRef = useRef(gameStatus);\r\n  const winStatusRef = useRef(winStatus);\r\n  gameStatusRef.current = gameStatus;\r\n  winStatusRef.current = winStatus;\r\n\r\n  useEffect(() => {\r\n\r\n    const controlGame = (timeInterval) => {\r\n      return new Promise((resolve, reject) => {\r\n        const startTime = Date.now();\r\n        let expected = startTime + timeInterval;\r\n        let secondsCount = 0;\r\n\r\n        const next = () => {\r\n          if (winStatusRef.current) {\r\n            resolve(secondsCount);\r\n          } else if (!gameStatusRef.current) {\r\n            reject(secondsCount);\r\n          } else {\r\n            const dt = Date.now() - expected;\r\n            if (dt < timeInterval) {\r\n              secondsCount = savedTime + Math.floor((expected - startTime) / 1000);\r\n              setTimeCounter(secondsCount);\r\n              expected += timeInterval;\r\n              setTimeout(next, Math.max(0, timeInterval - dt));\r\n            }\r\n          };\r\n        }\r\n        setTimeout(next, timeInterval);\r\n      });\r\n    };\r\n\r\n    if (gameStatus) {\r\n      controlGame(1000)\r\n      .then((result) => {\r\n        // console.log('Success ', result);\r\n        setSavedTime(0);\r\n        setIsFormVisible(true);\r\n      })\r\n      .catch((result) => {\r\n        // console.log('Pause ', result);\r\n        setSavedTime(result);\r\n      });\r\n    }\r\n\r\n  }, [gameStatus, winStatus, savedTime]);\r\n\r\n  const handleStartGame = () => {\r\n    setGameStatus(true);\r\n    setWinStatus(false);\r\n  };\r\n\r\n  const handleStopGame = () => {\r\n    setGameStatus(false);\r\n  };\r\n\r\n  const handleWinning = () => {\r\n    setGameStatus(false);\r\n    setWinStatus(true);\r\n  };\r\n\r\n  const handleResultsClick = () => {\r\n    setAreResultsVisible(true);\r\n  };\r\n\r\n  // Save new result (name, time) to local storage\r\n  const handleSubmitName = (name, time) => {\r\n    let results = [];\r\n    if (localStorage.getItem(LOCAL_STORAGE_KEY)) {\r\n      results = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    }\r\n    results.push({ name, time });\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(results));\r\n    setIsFormVisible(false);\r\n    setTimeCounter(0);\r\n  };\r\n\r\n  // Close results table\r\n  const handleSubmitResults = () => {\r\n    setAreResultsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Controls\r\n        onStartGame={handleStartGame}\r\n        onStopGame={handleStopGame}\r\n        onResultsClick={handleResultsClick}\r\n        isGameOn={gameStatus}\r\n        timeCounter={timeCounter}\r\n      />\r\n      <Board onWin={handleWinning} isGameOn={gameStatus}/>\r\n\r\n      {\r\n        isFormVisible &&\r\n        <FormInput onSubmitName={handleSubmitName} result={timeCounter}/>\r\n      }\r\n      {\r\n        areResultsVisible &&\r\n        <FormResults onSubmitResults={handleSubmitResults}/>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;","import React from 'react';\r\nimport MainScreen from '../components/MainScreen/MainScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <MainScreen/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}